WEBVTT

00:00:03.000 --> 00:00:05.500
在当下，构建一款云原生应用

00:00:05.500 --> 00:00:06.500
并不轻松

00:00:06.500 --> 00:00:09.100
开发者需要搭建合适的环境

00:00:09.100 --> 00:00:11.900
使用正确的软件库

00:00:11.900 --> 00:00:14.500
找到简易部署和快速调试的方式

00:00:14.500 --> 00:00:16.500
这些都非常耗时

00:00:16.500 --> 00:00:18.500
为了解决这些挑战

00:00:18.500 --> 00:00:20.000
我们打造了 Nocalhost

00:00:20.000 --> 00:00:23.300
Nocalhost 是一款基于 IDE 的云原生开发工具

00:00:23.300 --> 00:00:25.133
它优化了开发过程中的

00:00:25.133 --> 00:00:28.133
连接，部署，开发和调试等步骤

00:00:28.133 --> 00:00:30.666
让云原生开发变得更简单、高效

00:00:30.666 --> 00:00:33.266
Nocalhost 支持多种 IDE

00:00:33.266 --> 00:00:35.266
包括 VS Code 和 JetBrains

00:00:35.266 --> 00:00:39.266
这样，您可以使用任何已熟悉的编辑器进行应用开发

00:00:39.266 --> 00:00:41.966
让我们深入了解 Nocalhost 是怎样

00:00:41.966 --> 00:00:43.766
优化这些步骤的

00:00:43.766 --> 00:00:44.966
首先，连接

00:00:44.966 --> 00:00:48.966
开发者可以通过 kubeconfig 即可快速连接 K8s 集群

00:00:48.966 --> 00:00:51.966
同时， Nocalhost 也支持多集群连接

00:00:51.966 --> 00:00:54.533
Nocalhost 适用于任何 K8s 集群

00:00:54.533 --> 00:00:57.533
无论是本地的 Docker Destop 或 Minkube

00:00:57.533 --> 00:00:59.533
或是任意云端 K8s 集群

00:00:59.533 --> 00:01:05.100
Nocalhost 都可以一键连接，让开发者摆脱在本地部署环境的烦恼

00:01:05.100 --> 00:01:07.100
现在来看看应用的部署

00:01:07.100 --> 00:01:10.100
Nocalhost 提供便捷的应用部署方式

00:01:10.100 --> 00:01:13.100
支持在任意命名空间内部署应用

00:01:13.100 --> 00:01:16.100
目前，Nocalhost 支持通过 Manifest Yaml， Helm 和 Kusomize

00:01:16.100 --> 00:01:18.600
三种方式部署应用

00:01:18.600 --> 00:01:22.366
能快速地将配置好的应用部署到指定的 K8s 集群中

00:01:22.366 --> 00:01:25.133
应用部署完成后，就可以进行开发了

00:01:25.133 --> 00:01:30.133
Nocalhost 支持对 K8s 中常见类型的工作负载进行开发

00:01:30.133 --> 00:01:33.133
选择对应的工作负载，点击【锤子】图标

00:01:33.133 --> 00:01:35.400
Nocalhost 会启用开发模式

00:01:44.833 --> 00:01:47.166
当 Nocalhost 进入开发模式后

00:01:47.166 --> 00:01:50.066
会将远端的容器镜像替换为开发镜像

00:01:50.066 --> 00:01:53.800
使用开发镜像启动新的 POD 并替换当前 POD

00:01:53.800 --> 00:01:56.800
在新的 POD 上开启端口转发

00:01:56.800 --> 00:01:59.800
这样就可以方便的在本地访问远端应用了

00:01:59.800 --> 00:02:02.500
开启自动化的实时文件同步

00:02:02.500 --> 00:02:05.000
最后，将自动进入远端的 Terminal

00:02:05.000 --> 00:02:08.800
这样就可以通过 IDE 在远端进行编译、运行等操作了

00:02:08.800 --> 00:02:12.366
在开发时，Nocalhost 可以在每次进行修改后

00:02:12.366 --> 00:02:14.666
自动将代码同步到远端

00:02:14.666 --> 00:02:18.666
开发者可以方便地在开发容器内以源码启动进程

00:02:18.666 --> 00:02:21.666
Nocalhost 免去了提交、构建和推送镜像等操作

00:02:21.666 --> 00:02:25.166
能大幅提速编码自测的反馈过程

00:02:25.166 --> 00:02:27.666
所以代码修改能实现秒级生效

00:02:27.666 --> 00:02:28.700
在开发过程中

00:02:28.700 --> 00:02:32.300
可能发现应用的各种问题。因此需要进行调试

00:02:32.366 --> 00:02:34.666
即使是在调试远端 K8s 应用时

00:02:34.666 --> 00:02:38.533
Nocalhost 也可以提供和本地调试一致的 相同体验

00:02:38.533 --> 00:02:40.933
如需更进一步对集群中的应用进行排查

00:02:41.200 --> 00:02:41.766
Nocalhost 带有远端日志查看功能

00:02:47.000 --> 00:02:50.233
现在您已了解 Nocalhost 的作用和如何工作的

00:02:50.233 --> 00:02:54.300
通过优化开发过程中的连接，部署，开发和调试等步骤

00:02:54.300 --> 00:02:57.766
Nocalhost 提升了构建云原生应用的开发体验和效率

00:02:57.866 --> 00:02:58.366
我们希望这篇对 Nocalhost

00:02:58.366 --> 00:03:02.966
的简短介绍能为您提供入门所需的一切

00:03:02.966 --> 00:03:05.966
Nocalhost 让云原生应用开发更简单！

00:03:05.966 --> 00:03:08.466
欢迎访问我们的官网进行产品体验

00:03:08.466 --> 00:03:12.466
此外，您也可以通过 Slack 与我们联系或加入我们的微信群